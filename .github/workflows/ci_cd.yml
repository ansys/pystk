name: CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.10'
  LIBRARY_NAME: 'ansys-stk-core'
  LIBRARY_NAMESPACE: 'ansys.stk.core'
  DOCUMENTATION_CNAME: 'stk.docs.pyansys.com'
  STK_DOCKER_IMAGE: 'ansys/stk:latest-centos7'
  LICENSE_SERVER_PORT: '1055'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style checks"
    runs-on: ubuntu-latest
    steps:
      - name: "Run code style checks"
        uses: pyansys/actions/code-style@v4
        with: 
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: "Doc style checks"
    runs-on: ubuntu-latest
    steps:
      - name: "Run code style checks"
        uses: pyansys/actions/doc-style@v4
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-build:
    name: "Doc build"
    runs-on: ubuntu-latest
    needs: doc-style
    steps:
      - name: "Building project documentation"
        uses: pyansys/actions/doc-build@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  tests:
    name: "Tests Python ${{ matrix.python }}"
    runs-on: [self-hosted, pystk]
    # needs: code-style
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11"]
      fail-fast: false
    steps:

      - name: "Checkout the project"
        uses: actions/checkout@v3

      - name: "Generate the name of the docker image and the container"
        run: |
          python_image_name=${{ env.STK_DOCKER_IMAGE }}-python${{ matrix.python }}
          container_name=stk-python${{ matrix.python }}
          echo "STK_PYTHON_IMAGE=$python_image_name" >> $GITHUB_ENV
          echo "STK_CONTAINER=$container_name" >> $GITHUB_ENV

      - name: "Start the container from the desired image"
        run: |
          docker run \
            --detach -it \
            --name ${{ env.STK_CONTAINER }} \
            --env ANSYSLMD_LICENSE_FILE=${{ env.LICENSE_SERVER_PORT }}@${{ secrets.LICENSE_SERVER }} \
            --volume ${PWD}:/home/stk/pystk \
            ${{ env.STK_PYTHON_IMAGE }}

      - name: "Install the project"
        run: |
          docker exec ${{ env.STK_CONTAINER }} /bin/bash -c \
            "python -m pip install /home/stk/pystk"

      - name: "Show the version of the engine"
        run: |
          docker exec ${{ env.STK_CONTAINER }} /bin/bash -c \
            "python -c 'from ansys.stk.core.stkengine import STKEngine; print(STKEngine.StartApplication().Version)'"

      - name: "Stop the container"
        if: always()
        run: |
          docker stop ${{ env.STK_CONTAINER }}
          docker logs ${{ env.STK_CONTAINER }}
          docker rm ${{ env.STK_CONTAINER }}

  build-library:
    name: "Build library"
    runs-on: ubuntu-latest
    needs: [doc-build, tests]
    steps:
      - uses: pyansys/actions/build-library@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}

  doc-deploy-dev:
    name: "Deploy dev docs"
    runs-on: ubuntu-latest
    needs: build-library
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    steps:
      - uses: pyansys/actions/doc-deploy-dev@v4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
