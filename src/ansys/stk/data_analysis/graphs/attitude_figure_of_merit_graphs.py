"""Provides graphs for AttitudeFigureOfMerit objects."""
from ansys.stk.data_analysis.graphs.graph_functions import *
from ansys.stk.core.stkobjects import *

def grid_stats_over_time_time_xy_graph(stk_obj :IStkObject, start_time=None, stop_time=None, step=60):
    r"""Create plot of the minimum, maximum, and average figure of merit values, sampled over all grid directions, over time. Grid directions for which a value cannot be computed are not included in the reported statistics.

    This graph wrapper was generated from AGI\STK12\STKData\Styles\AttitudeFigureOfMerit\Grid Stats Over Time.rsg.
    """
    root = stk_obj.root
    if start_time is None:
        start_time = root.current_scenario.start_time
    if stop_time is None:
        stop_time = root.current_scenario.stop_time
    df = stk_obj.data_providers.item('Overall Value by Time').exec(start_time, stop_time, step).data_sets.to_pandas_dataframe()
    axes = [{'use_unit' : None, 'unit_squared': None, 'ylog10': False, 'y2log10': False, 'label': 'Angle', 'lines': [
            {'y_name':'minimum', 'label':'Minimum', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'},
            {'y_name':'maximum', 'label':'Maximum', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'},
            {'y_name':'average', 'label':'Average', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'}]}]
    return line_chart_time_x(df, root, ['minimum','maximum','average'], ['time'], axes, 'Grid Stats Over Time')

def value_by_latitude_xy_graph(stk_obj : IStkObject):
    r"""Create plot of the minimum, maximum, and average figure of merit value, sampled over all grid points at the same latitude, as a function of latitude. Statistics are generated by sampling values from all grid directions with latitude values within one half degree of the reported latitude value. Values are computed for every one degree of latitude. For example, statistics reported for the latitude value of 30 degrees will represent figure of merit values for all directions with latitudes between 29.5 and 30.5 degrees. Grid directions for which a value cannot be computed are not included in the reported statistics. Latitudes which do not have any reported grid directions within one half degree are not included in the reported values.

    This graph wrapper was generated from AGI\STK12\STKData\Styles\AttitudeFigureOfMerit\Value By Latitude.rsg.
    """
    root = stk_obj.root
    df = stk_obj.data_providers.item('Value by Latitude').exec().data_sets.to_pandas_dataframe()
    axes = [{'use_unit' : None, 'unit_squared': None, 'ylog10': False, 'y2log10': False, 'label': 'Angle', 'lines': [
            {'y_name':'minimum', 'label':'Minimum', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'},
            {'y_name':'maximum', 'label':'Maximum', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'},
            {'y_name':'average', 'label':'Average', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'}]}]
    return line_chart(df, root, ['latitude','minimum','maximum','average'], [], axes, 'latitude','Latitude', 'Value By Latitude' )

def value_by_longitude_xy_graph(stk_obj : IStkObject):
    r"""Create plot of the minimum, maximum, and average figure of merit value, sampled over all grid points at the same longitude, as a function of longitude. Statistics are generated by sampling values from all grid directions with longitude values within one half degree of the reported longitude value. Values are computed for every one degree of longitude. For example, statistics reported for the longitude value of 30 degrees will represent figure of merit values for all directions with longitudes between 29.5 and 30.5 degrees. Grid directions for which a value cannot be computed are not included in the reported statistics. Longitudes which do not have any reported grid directions within one half degree are not included in the reported values.

    This graph wrapper was generated from AGI\STK12\STKData\Styles\AttitudeFigureOfMerit\Value By Longitude.rsg.
    """
    root = stk_obj.root
    df = stk_obj.data_providers.item('Value by Longitude').exec().data_sets.to_pandas_dataframe()
    axes = [{'use_unit' : None, 'unit_squared': None, 'ylog10': False, 'y2log10': False, 'label': 'Angle', 'lines': [
            {'y_name':'minimum', 'label':'Minimum', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'},
            {'y_name':'maximum', 'label':'Maximum', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'},
            {'y_name':'average', 'label':'Average', 'use_unit':None, 'unit_squared': None, 'unit_pref': 'Angle'}]}]
    return line_chart(df, root, ['longitude','minimum','maximum','average'], [], axes, 'longitude','Longitude', 'Value By Longitude' )

